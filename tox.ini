[tox]
minversion = 2.1
envlist = py{35,27},functional,pep8,pip-missing-reqs
skipsdist = True

[testenv]
usedevelop = True
# tox is silly... these need to be separated by a newline....
whitelist_externals = bash
                      find
                      rm
                      env
install_command = python -m pip install -c {env:UPPER_CONSTRAINTS_FILE:https://git.openstack.org/cgit/openstack/requirements/plain/upper-constraints.txt?h=stable/queens} {opts} {packages}
setenv = VIRTUAL_ENV={envdir}
         LANGUAGE=en_US
         LC_ALL=en_US.utf-8
         OS_STDOUT_CAPTURE=1
         OS_STDERR_CAPTURE=1
         OS_TEST_TIMEOUT=160
deps = -r{toxinidir}/test-requirements.txt
commands = 
    # TODO
    # python -m pip install {toxinidir}/nsx-t-2.5.1-sdk/vapi_runtime-2.12.0-py2.py3-none-any.whl
    # python -m pip install {toxinidir}/nsx-t-2.5.1-sdk/vapi_common-2.12.0-py2.py3-none-any.whl
    # python -m pip install {toxinidir}/nsx-t-2.5.1-sdk/vapi_common_client-2.12.0-py2.py3-none-any.whl
    # python -m pip install {toxinidir}/nsx-t-2.5.1-sdk/nsx_policy_python_sdk-2.5.1.0.0.15315968-py2.py3-none-any.whl
    # python -m pip install {toxinidir}/nsx-t-2.5.1-sdk/nsx_python_sdk-2.5.1.0.0.15315968-py2.py3-none-any.whl

    python setup.py testr --slowest --testr-args='{posargs}'
passenv = OS_DEBUG GENERATE_HASHES
# there is also secret magic in subunit-trace which lets you run in a fail only
# mode. To do this define the TRACE_FAILONLY environmental variable.

[testenv:py27]
basepython = python2.7
commands =
    {[testenv]commands}
    stestr run '{posargs}'
    env TEST_OSPROFILER=1 stestr run --combine --no-discover 'networking_nsxv3.tests.unit'
    stestr slowest

[testenv:py35]
basepython = python3
commands =
    {[testenv]commands}
    stestr run # --blacklist-file=tests-py3.txt '{posargs}' # use to exclude tests by regex
    env TEST_OSPROFILER=1 stestr run --combine --no-discover 'networking_nsxv3.tests.unit.test_nsxv3_infra'

[testenv:py36]
basepython = python3.6
commands =
    {[testenv]commands}
    stestr run
    env TEST_OSPROFILER=1 stestr run --combine --no-discover 'networking_nsxv3.tests.unit.test_nsxv3_integration'

[testenv:pep8]
basepython = python2.7
deps = {[testenv]deps}
commands =
  bash tools/flake8wrap.sh {posargs}
  # Check that all JSON files don't have \r\n in line.
  bash -c "! find doc/ -type f -name *.json | xargs grep -U -n $'\r'"
  # Check that all included JSON files are valid JSON
  bash -c '! find doc/ -type f -name *.json | xargs -t -n1 python -m json.tool 2>&1 > /dev/null | grep -B1 -v ^python'
