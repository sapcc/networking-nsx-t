## Resources ##
# tox - https://tox.readthedocs.io/en/latest/config.html
# stestr - https://stestr.readthedocs.io/en/latest/MANUAL.html

[tox]
minversion = 2.1
envlist = py{27},functional,pep8,pip-missing-reqs
skipsdist = True

[testenv]
usedevelop = True
whitelist_externals = bash
                      find
                      rm
                      env
install_command = python -m pip install {opts} {packages}
setenv = VIRTUAL_ENV={envdir}
         LANGUAGE=en_US
         LC_ALL=en_US.utf-8
         OS_STDOUT_CAPTURE=1
         OS_STDERR_CAPTURE=1
         OS_TEST_TIMEOUT=360
         NSXV3_LOGIN_HOSTNAME={env:NSXV3_LOGIN_HOSTNAME}
         NSXV3_LOGIN_PORT={env:NSXV3_LOGIN_PORT}
         NSXV3_LOGIN_USER={env:NSXV3_LOGIN_USER}
         NSXV3_LOGIN_PASSWORD={env:NSXV3_LOGIN_PASSWORD}
         NSXV3_TRANSPORT_ZONE_NAME={env:NSXV3_TRANSPORT_ZONE_NAME}

deps = -c{env:UPPER_CONSTRAINTS_FILE:https://releases.openstack.org/constraints/upper/queens}
       -r{toxinidir}/test-requirements.txt 
       -r{toxinidir}/requirements.txt
commands = 
    python setup.py testr --slowest --testr-args='{posargs}'
passenv = OS_DEBUG GENERATE_HASHES
# there is also secret magic in subunit-trace which lets you run in a fail only
# mode. To do this define the TRACE_FAILONLY environmental variable.

[testenv:py27]
basepython = python2.7
commands =
    {[testenv]commands}
    stestr run '{posargs}'
    env TEST_OSPROFILER=1 stestr run --combine --no-discover 'networking_nsxv3/tests/unit'
    stestr slowest

[testenv:functional]
basepython = python2.7
commands =
    {[testenv]commands}
    stestr run '{posargs}'
    env TEST_OSPROFILER=1 stestr run --serial --combine --no-discover 'networking_nsxv3/tests/functional'
    stestr slowest

[testenv:pep8]
basepython = python2.7
deps = {[testenv]deps}
commands =
  bash tools/flake8wrap.sh {posargs}
  # Check that all JSON files don't have \r\n in line.
  bash -c "! find doc/ -type f -name *.json | xargs grep -U -n $'\r'"
  # Check that all included JSON files are valid JSON
  bash -c '! find doc/ -type f -name *.json | xargs -t -n1 python -m json.tool 2>&1 > /dev/null | grep -B1 -v ^python'
